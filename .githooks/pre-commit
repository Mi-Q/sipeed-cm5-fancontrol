#!/bin/bash
#
# Pre-commit hook to automatically format code with black and isort, then lint with flake8
# This ensures all Python code is properly formatted and linted before committing
#
# Installation:
#   cp .githooks/pre-commit .git/hooks/pre-commit
#   chmod +x .git/hooks/pre-commit
#
# Or use the setup script:
#   ./setup-hooks.sh

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "Running pre-commit hooks..."

# Get list of staged Python files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.py$')

if [ -z "$STAGED_FILES" ]; then
    echo -e "${GREEN}✓ No Python files to check${NC}"
    exit 0
fi

echo "Formatting Python files with black and isort..."

# Format with black
echo -e "${YELLOW}Running black...${NC}"
if command -v black &> /dev/null; then
    black $STAGED_FILES
    BLACK_EXIT=$?
else
    echo -e "${RED}✗ black not found. Install with: pip install black${NC}"
    exit 1
fi

# Sort imports with isort
echo -e "${YELLOW}Running isort...${NC}"
if command -v isort &> /dev/null; then
    isort $STAGED_FILES
    ISORT_EXIT=$?
else
    echo -e "${RED}✗ isort not found. Install with: pip install isort${NC}"
    exit 1
fi

# Lint with flake8
echo -e "${YELLOW}Running flake8...${NC}"
if command -v flake8 &> /dev/null; then
    flake8 $STAGED_FILES
    FLAKE8_EXIT=$?
    if [ $FLAKE8_EXIT -ne 0 ]; then
        echo -e "${RED}✗ flake8 found linting errors${NC}"
        echo -e "${YELLOW}Please fix the errors above before committing${NC}"
        exit 1
    fi
else
    echo -e "${RED}✗ flake8 not found. Install with: pip install flake8${NC}"
    exit 1
fi

# Re-add formatted files to staging
if [ $BLACK_EXIT -eq 0 ] && [ $ISORT_EXIT -eq 0 ] && [ $FLAKE8_EXIT -eq 0 ]; then
    echo -e "${GREEN}✓ Code formatted and linted successfully${NC}"
    git add $STAGED_FILES
    echo -e "${GREEN}✓ Formatted files re-staged${NC}"
    exit 0
else
    echo -e "${RED}✗ Formatting or linting failed${NC}"
    exit 1
fi
