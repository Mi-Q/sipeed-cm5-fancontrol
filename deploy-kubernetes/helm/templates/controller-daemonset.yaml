apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sipeed-fan-controller
  labels:
    app.kubernetes.io/name: sipeed-fan-controller
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: sipeed-fan-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sipeed-fan-controller
    spec:
      hostNetwork: false
      containers:
        - name: fan-controller
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          command: ["python3", "/app/fan_control.py"]
          args: {{ toYaml .Values.controller.args | nindent 12 }}
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          volumeMounts:
            - name: sys
              mountPath: /sys
            - name: dev
              mountPath: /dev
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
      volumes:
        - name: sys
          hostPath:
            path: /sys
            type: Directory
        - name: dev
          hostPath:
            path: /dev
            type: Directory
      tolerations:
        - operator: "Exists"